# -*- coding: utf-8 -*-
"""tuplas.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1zjQM9ZkRP6eoryGLgiDt0lD0g23zeJxc
"""

lista = [2, 6, 1]

a = (1, 2, 3, 4,)
 b = ('a', 3, 1, 't',)
 c = a + b
 print(c)

for elemento in range(10):
  print(f'passando {elemento} vez(es)')

"""f = formatar e colocar uma variável
range() = Determina quantas vezes irei passar pelo for
% essa operação facilita a divisão
"""

for numero in range(1,11):
  print(f'passou pelo numero {numero}')

  if numero%2 == 0:
    print(f'numero par {numero}')
    break

"""Alguns exemplos de tuplas:"""

t = (1, 2, 3)
l = [1, 2, 3]

l[0] = 10
# print(l)

# print(t[0])
# t[0] = 10

primeiro, segundo, terceiro = t
print(primeiro)
print(segundo)
print(terceiro)

"""Troca de variáveis"""

a = 1
b = 2

a, b = b, a 

print(a) 
print(b)

"""elif = Importante para condicionais
O código vai bifurcar, elif serve para guiar os ramos
"""

momento = 'a'

if momento == 'dia':
  print('bom dia')
elif momento == 'tarde':
  print('boa tarde')
elif momento == 'noite':
  print('boa noite')
else:
    print('não sei que horas são :)')

"""== É a comparação

# Funções
"""

def multiplica_por_2(number):
  print('estou executando a função...')
  return number * 2

quatro = multiplica_por_2(2)
print(quatro)

oito = multiplica_por_2(quatro)


print(oito)

"""def é o começo da função e return é o fim"""

def multiplica(a, b, c):
    return a * b * c

  resultado_1 = multiplica(3, 2, 4)
  print(resultado_1)

def multiplica_com_valor_padrao(a, b):
    return a * b

  resultado_2 = multiplica_com_valor_padrao(3, 2)
  print(resultado_2)
  resultado_3 = multiplica_com_valor_padrao(3, 2)
  print(resultado_3)

def retorna_varios_valores(a, b=5):
    soma = a + b
    mult = a * b

    return soma, mult

  resultados = retorna_varios_valores(7, 3)
  print(resultados)

  r_soma, r_mult = retorna_varios_valores(7, 3)
  print(f'Resultado da soma: {r_soma}')
  print(f'Resultado da soma: {r_mult}')

!pip -1 install requests

import requests